diff --git a/anitya/lib/model.py b/anitya/lib/model.py
index 75506ea..d43436b 100644
--- a/anitya/lib/model.py
+++ b/anitya/lib/model.py
@@ -398,8 +398,14 @@ class Project(BASE):
         return output
 
     @classmethod
-    def get_or_create(cls, session, name, homepage, backend='custom'):
-        project = cls.by_name_and_homepage(session, name, homepage)
+    def _get_or_create(cls, session, name, homepage, ecosystem, backend,
+                       by='name_and_homepage'):
+        if by == 'name_and_homepage':
+            project = cls.by_name_and_homepage(session, name, homepage)
+        elif by == 'name_and_ecosystem':
+            project = cls.by_name_and_ecosystem(session, name, ecosystem)
+        else:
+            raise ValueError("Can't get project by %s" % by)
         if not project:
             # Before creating, make sure the backend already exists
             backend_obj = Backend.get(session, name=backend)
@@ -407,13 +413,47 @@ class Project(BASE):
                 # We don't want to automatically create these.  They must have
                 # code associated with them in anitya.lib.backends
                 raise ValueError("No such backend %r" % backend)
-
-            project = cls(name=name, homepage=homepage, backend=backend)
+            if ecosystem:
+                # we handle ecosystem same as we handled backend above
+                ecosystem_obj = Ecosystem.get(session, name=ecosystem)
+                if not ecosystem_obj:
+                    raise ValueError("No such ecosystem %r" % ecosystem)
+
+            project = cls(
+                name=name,
+                homepage=homepage,
+                backend=backend,
+                ecosystem_name=ecosystem
+            )
             session.add(project)
             session.flush()
         return project
 
     @classmethod
+    def get_or_create(cls, session, name, homepage,
+                      ecosystem=None, backend='custom'):
+        return cls._get_or_create(
+            session=session,
+            name=name,
+            homepage=homepage,
+            ecosystem=None,
+            backend=backend,
+            by='name_and_homepage'
+        )
+
+    @classmethod
+    def get_or_create_by_name_and_ecosystem(cls, session, name, homepage,
+                                            ecosystem, backend='custom'):
+        return cls._get_or_create(
+            session=session,
+            name=name,
+            homepage=homepage,
+            ecosystem=ecosystem,
+            backend=backend,
+            by='name_and_ecosystem'
+        )
+
+    @classmethod
     def by_name(cls, session, name):
         return session.query(cls).filter_by(name=name).all()
 
diff --git a/files/anitya_cron.py b/files/anitya_cron.py
index be904f9..7586df9 100644
--- a/files/anitya_cron.py
+++ b/files/anitya_cron.py
@@ -34,21 +34,27 @@ def indexed_listings():
             continue
 
 
-def projects_by_feed(session):
+def projects_by_feed(session, by_ecosystem):
     """ Return the list of projects out of sync, found by feed listings.
 
     If a new entry is noticed and we don't have a project for it, add it.
     """
     for name, homepage, backend, version in indexed_listings():
-        project = anitya.lib.model.Project.get_or_create(
-            session, name, homepage, backend)
+        if by_ecosystem:
+            ecosystem = anitya.lib.model.Backend.by_name(session, backend).default_ecosystem
+            if ecosystem is None:
+                continue
+            project = anitya.lib.model.Project.get_or_create_by_name_and_ecosystem(
+                session, name, homepage, ecosystem.name, backend)
+        else:
+            project = anitya.lib.model.Project.get_or_create(
+                session, name, homepage, backend)
         if project.latest_version == version:
             LOG.debug("Project %s is already up to date." % project.name)
         else:
             yield project
 
 
-
 def update_project(project_id):
     """ Check for updates on the specified project. """
     session = anitya.lib.init(anitya.app.APP.config['DB_URL'])
@@ -62,7 +68,7 @@ def update_project(project_id):
         session.remove()
 
 
-def main(debug, feed):
+def main(debug, feed, by_ecosystem):
     ''' Retrieve all the packages and for each of them update the release
     version.
     '''
@@ -89,7 +95,7 @@ def main(debug, feed):
     LOG.addHandler(fhand)
 
     if feed:
-        projects = list(projects_by_feed(session))
+        projects = list(projects_by_feed(session, by_ecosystem))
         session.commit()
     else:
         projects = anitya.lib.model.Project.all(session)
@@ -109,4 +115,5 @@ def main(debug, feed):
 if __name__ == '__main__':
     debug = '--debug' in sys.argv
     feed = '--check-feed' in sys.argv
-    main(debug=debug, feed=feed)
+    by_ecosystem = '--by-ecosystem' in sys.argv
+    main(debug=debug, feed=feed, by_ecosystem=by_ecosystem)
